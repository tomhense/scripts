#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import argparse
import re
from pathlib import Path
from sys import stdout
from tempfile import NamedTemporaryFile


def process(vtt_path: Path, output_path: Path | None = None) -> None:
    bad_words = ["-->", "</c>"]
    prefix = re.compile(r"^&gt;&gt; ")

    with open(vtt_path, "r") as oldfile, NamedTemporaryFile("r+") as newfile:
        for line in oldfile:
            if not any(bad_word in line for bad_word in bad_words):
                newfile.write(line)

        newfile.seek(0)  # go back to the beginning of the file
        uniqlines = set(newfile.readlines())
        mylst = map(lambda each: re.sub(prefix, "", each), uniqlines)

        if output_path is None:
            stdout.writelines(set(mylst))
        else:
            with open(output_path, "w") as rmdup:
                rmdup.writelines(set(mylst))


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("vtt")
    parser.add_argument("output", nargs="?")
    args = parser.parse_args()

    vtt_path = Path(args.vtt)
    if not vtt_path.exists():
        print(f"File {args.vtt} does not exist")
        return

    process(vtt_path)


if __name__ == "__main__":
    main()
